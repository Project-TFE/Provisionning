---
- name: Install Kubernetes and Minikube on Jenkins VM
  hosts: localhost
  become: yes

  vars:
    docker_gpg_path: /etc/apt/keyrings/docker.gpg
    local_user: "{{ lookup('env', 'USER') }}"

  tasks:

    # Nettoyage ancien Docker (conflits possibles)
    - name: Remove old Docker APT source list
      file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Remove old Docker GPG key
      file:
        path: "{{ docker_gpg_path }}"
        state: absent

    # Pr√©paration
    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key and convert to keyring
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker apt repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: |
          deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable


    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - conntrack
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Add current user to docker group
      user:
        name: "{{ local_user }}"
        groups: docker
        append: yes

    - name: Reset connection to apply group changes
      meta: reset_connection

    - name: Ensure docker socket has correct permissions
      file:
        path: /var/run/docker.sock
        mode: '0666'

    - name: Start Minikube (3 nodes)
      become_user: "{{ local_user }}"
      command: minikube start --driver=docker --nodes=3 --force
      args:
        creates: /home/{{ local_user }}/.minikube
      environment:
        HOME: "/home/{{ local_user }}"

    - name: Wait for cluster to be ready
      become_user: "{{ local_user }}"
      command: kubectl wait --for=condition=Ready nodes --all --timeout=300s
      register: wait_result
      until: wait_result.rc == 0
      retries: 30
      delay: 10